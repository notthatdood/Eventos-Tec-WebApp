// <auto-generated />
using System;
using LayoutTemplateWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LayoutTemplateWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231018042137_NuevaMigracion")]
    partial class NuevaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LayoutTemplateWebApp.Model.Constraint", b =>
                {
                    b.Property<int>("idConstraint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idConstraint"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("idConstraint");

                    b.ToTable("Constraints");
                });

            modelBuilder.Entity("LayoutTemplateWebApp.Model.Event", b =>
                {
                    b.Property<int>("idEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEvent"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("entryCost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idEventState")
                        .HasColumnType("int");

                    b.Property<int>("idEventType")
                        .HasColumnType("int");

                    b.Property<string>("maxCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("organizer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEvent");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("LayoutTemplateWebApp.Model.Facility", b =>
                {
                    b.Property<int>("idFacility")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idFacility"));

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.Property<int>("idBuildingType")
                        .HasColumnType("int");

                    b.Property<int>("idFacilityAdministrator")
                        .HasColumnType("int");

                    b.Property<int>("idLocation")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idFacility");

                    b.ToTable("Facility");
                });

            modelBuilder.Entity("LayoutTemplateWebApp.Model.FacilityAdministrator", b =>
                {
                    b.Property<int>("idFacilityAdministrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idFacilityAdministrator"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("idFacilityAdministrator");

                    b.ToTable("FacilityAdministrators");
                });

            modelBuilder.Entity("LayoutTemplateWebApp.Model.FacilityType", b =>
                {
                    b.Property<int>("idFacilityType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idFacilityType"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idFacilityType");

                    b.ToTable("FacilityTypes");
                });

            modelBuilder.Entity("LayoutTemplateWebApp.Model.Location", b =>
                {
                    b.Property<int>("idLocation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idLocation"));

                    b.Property<string>("coordinates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("inCampus")
                        .HasColumnType("bit");

                    b.HasKey("idLocation");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("LayoutTemplateWebApp.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("cardNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("debt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("firstLastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("personName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("personPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("secondLastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
